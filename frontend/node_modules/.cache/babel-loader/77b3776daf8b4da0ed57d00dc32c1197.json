{"ast":null,"code":"import { Interface, Typed } from \"../abi/index.js\";\nimport { resolveAddress } from \"../address/index.js\";\n// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nimport { copyRequest, Log } from \"../providers/provider.js\";\nimport { defineProperties, isCallException, isHexString, resolveProperties, makeError, assert, assertArgument } from \"../utils/index.js\";\nimport { ContractEventPayload, ContractUnknownEventPayload, ContractTransactionResponse, EventLog } from \"./wrappers.js\";\nconst BN_0 = BigInt(0);\nfunction canCall(value) {\n  return value && typeof value.call === \"function\";\n}\nfunction canEstimate(value) {\n  return value && typeof value.estimateGas === \"function\";\n}\nfunction canResolve(value) {\n  return value && typeof value.resolveName === \"function\";\n}\nfunction canSend(value) {\n  return value && typeof value.sendTransaction === \"function\";\n}\nclass PreparedTopicFilter {\n  #filter;\n  fragment;\n  constructor(contract, fragment, args) {\n    defineProperties(this, {\n      fragment\n    });\n    if (fragment.inputs.length < args.length) {\n      throw new Error(\"too many arguments\");\n    }\n    // Recursively descend into args and resolve any addresses\n    const runner = getRunner(contract.runner, \"resolveName\");\n    const resolver = canResolve(runner) ? runner : null;\n    this.#filter = async function () {\n      const resolvedArgs = await Promise.all(fragment.inputs.map((param, index) => {\n        const arg = args[index];\n        if (arg == null) {\n          return null;\n        }\n        return param.walkAsync(args[index], (type, value) => {\n          if (type === \"address\") {\n            return resolveAddress(value, resolver);\n          }\n          return value;\n        });\n      }));\n      return contract.interface.encodeFilterTopics(fragment, resolvedArgs);\n    }();\n  }\n  getTopicFilter() {\n    return this.#filter;\n  }\n}\n// A = Arguments passed in as a tuple\n// R = The result type of the call (i.e. if only one return type,\n//     the qualified type, otherwise Result)\n// D = The type the default call will return (i.e. R for view/pure,\n//     TransactionResponse otherwise)\n//export interface ContractMethod<A extends Array<any> = Array<any>, R = any, D extends R | ContractTransactionResponse = ContractTransactionResponse> {\nfunction _WrappedMethodBase() {\n  return Function;\n}\nfunction getRunner(value, feature) {\n  if (value == null) {\n    return null;\n  }\n  if (typeof value[feature] === \"function\") {\n    return value;\n  }\n  if (value.provider && typeof value.provider[feature] === \"function\") {\n    return value.provider;\n  }\n  return null;\n}\nfunction getProvider(value) {\n  if (value == null) {\n    return null;\n  }\n  return value.provider || null;\n}\n/**\n *  @_ignore:\n */\nexport async function copyOverrides(arg, allowed) {\n  // Create a shallow copy (we'll deep-ify anything needed during normalizing)\n  const overrides = copyRequest(Typed.dereference(arg, \"overrides\"));\n  assertArgument(overrides.to == null || (allowed || []).indexOf(\"to\") >= 0, \"cannot override to\", \"overrides.to\", overrides.to);\n  assertArgument(overrides.data == null || (allowed || []).indexOf(\"data\") >= 0, \"cannot override data\", \"overrides.data\", overrides.data);\n  // Resolve any from\n  if (overrides.from) {\n    overrides.from = await resolveAddress(overrides.from);\n  }\n  return overrides;\n}\n/**\n *  @_ignore:\n */\nexport async function resolveArgs(_runner, inputs, args) {\n  // Recursively descend into args and resolve any addresses\n  const runner = getRunner(_runner, \"resolveName\");\n  const resolver = canResolve(runner) ? runner : null;\n  return await Promise.all(inputs.map((param, index) => {\n    return param.walkAsync(args[index], (type, value) => {\n      value = Typed.dereference(value, type);\n      if (type === \"address\") {\n        return resolveAddress(value, resolver);\n      }\n      return value;\n    });\n  }));\n}\nclass WrappedFallback {\n  _contract;\n  constructor(contract) {\n    defineProperties(this, {\n      _contract: contract\n    });\n    const proxy = new Proxy(this, {\n      // Perform send when called\n      apply: async (target, thisArg, args) => {\n        return await target.send(...args);\n      }\n    });\n    return proxy;\n  }\n  async populateTransaction(overrides) {\n    // If an overrides was passed in, copy it and normalize the values\n    const tx = await copyOverrides(overrides, [\"data\"]);\n    tx.to = await this._contract.getAddress();\n    const iface = this._contract.interface;\n    // Only allow payable contracts to set non-zero value\n    const payable = iface.receive || iface.fallback && iface.fallback.payable;\n    assertArgument(payable || (tx.value || BN_0) === BN_0, \"cannot send value to non-payable contract\", \"overrides.value\", tx.value);\n    // Only allow fallback contracts to set non-empty data\n    assertArgument(iface.fallback || (tx.data || \"0x\") === \"0x\", \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n    return tx;\n  }\n  async staticCall(overrides) {\n    const runner = getRunner(this._contract.runner, \"call\");\n    assert(canCall(runner), \"contract runner does not support calling\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"call\"\n    });\n    const tx = await this.populateTransaction(overrides);\n    try {\n      return await runner.call(tx);\n    } catch (error) {\n      if (isCallException(error) && error.data) {\n        throw this._contract.interface.makeError(error.data, tx);\n      }\n      throw error;\n    }\n  }\n  async send(overrides) {\n    const runner = this._contract.runner;\n    assert(canSend(runner), \"contract runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"sendTransaction\"\n    });\n    const tx = await runner.sendTransaction(await this.populateTransaction(overrides));\n    const provider = getProvider(this._contract.runner);\n    // @TODO: the provider can be null; make a custom dummy provider that will throw a\n    // meaningful error\n    return new ContractTransactionResponse(this._contract.interface, provider, tx);\n  }\n  async estimateGas(overrides) {\n    const runner = getRunner(this._contract.runner, \"estimateGas\");\n    assert(canEstimate(runner), \"contract runner does not support gas estimation\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"estimateGas\"\n    });\n    return await runner.estimateGas(await this.populateTransaction(overrides));\n  }\n}\nclass WrappedMethod extends _WrappedMethodBase() {\n  name = \"\"; // Investigate!\n  _contract;\n  _key;\n  constructor(contract, key) {\n    super();\n    defineProperties(this, {\n      name: contract.interface.getFunctionName(key),\n      _contract: contract,\n      _key: key\n    });\n    const proxy = new Proxy(this, {\n      // Perform the default operation for this fragment type\n      apply: async (target, thisArg, args) => {\n        const fragment = target.getFragment(...args);\n        if (fragment.constant) {\n          return await target.staticCall(...args);\n        }\n        return await target.send(...args);\n      }\n    });\n    return proxy;\n  }\n  // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n  get fragment() {\n    const fragment = this._contract.interface.getFunction(this._key);\n    assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"fragment\"\n    });\n    return fragment;\n  }\n  getFragment() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const fragment = this._contract.interface.getFunction(this._key, args);\n    assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"fragment\"\n    });\n    return fragment;\n  }\n  async populateTransaction() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    const fragment = this.getFragment(...args);\n    // If an overrides was passed in, copy it and normalize the values\n    let overrides = {};\n    if (fragment.inputs.length + 1 === args.length) {\n      overrides = await copyOverrides(args.pop());\n    }\n    if (fragment.inputs.length !== args.length) {\n      throw new Error(\"internal error: fragment inputs doesn't match arguments; should not happen\");\n    }\n    const resolvedArgs = await resolveArgs(this._contract.runner, fragment.inputs, args);\n    return Object.assign({}, overrides, await resolveProperties({\n      to: this._contract.getAddress(),\n      data: this._contract.interface.encodeFunctionData(fragment, resolvedArgs)\n    }));\n  }\n  async staticCall() {\n    const result = await this.staticCallResult(...arguments);\n    if (result.length === 1) {\n      return result[0];\n    }\n    return result;\n  }\n  async send() {\n    const runner = this._contract.runner;\n    assert(canSend(runner), \"contract runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"sendTransaction\"\n    });\n    const tx = await runner.sendTransaction(await this.populateTransaction(...arguments));\n    const provider = getProvider(this._contract.runner);\n    // @TODO: the provider can be null; make a custom dummy provider that will throw a\n    // meaningful error\n    return new ContractTransactionResponse(this._contract.interface, provider, tx);\n  }\n  async estimateGas() {\n    const runner = getRunner(this._contract.runner, \"estimateGas\");\n    assert(canEstimate(runner), \"contract runner does not support gas estimation\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"estimateGas\"\n    });\n    return await runner.estimateGas(await this.populateTransaction(...arguments));\n  }\n  async staticCallResult() {\n    const runner = getRunner(this._contract.runner, \"call\");\n    assert(canCall(runner), \"contract runner does not support calling\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"call\"\n    });\n    const tx = await this.populateTransaction(...arguments);\n    let result = \"0x\";\n    try {\n      result = await runner.call(tx);\n    } catch (error) {\n      if (isCallException(error) && error.data) {\n        throw this._contract.interface.makeError(error.data, tx);\n      }\n      throw error;\n    }\n    const fragment = this.getFragment(...arguments);\n    return this._contract.interface.decodeFunctionResult(fragment, result);\n  }\n}\nfunction _WrappedEventBase() {\n  return Function;\n}\nclass WrappedEvent extends _WrappedEventBase() {\n  name = \"\"; // @TODO: investigate \n  _contract;\n  _key;\n  constructor(contract, key) {\n    super();\n    defineProperties(this, {\n      name: contract.interface.getEventName(key),\n      _contract: contract,\n      _key: key\n    });\n    return new Proxy(this, {\n      // Perform the default operation for this fragment type\n      apply: (target, thisArg, args) => {\n        return new PreparedTopicFilter(contract, target.getFragment(...args), args);\n      }\n    });\n  }\n  // Only works on non-ambiguous keys\n  get fragment() {\n    const fragment = this._contract.interface.getEvent(this._key);\n    assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"fragment\"\n    });\n    return fragment;\n  }\n  getFragment() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    const fragment = this._contract.interface.getEvent(this._key, args);\n    assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"fragment\"\n    });\n    return fragment;\n  }\n}\n;\n// The combination of TypeScrype, Private Fields and Proxies makes\n// the world go boom; so we hide variables with some trickery keeping\n// a symbol attached to each BaseContract which its sub-class (even\n// via a Proxy) can reach and use to look up its internal values.\nconst internal = Symbol.for(\"_ethersInternal_contract\");\nconst internalValues = new WeakMap();\nfunction setInternal(contract, values) {\n  internalValues.set(contract[internal], values);\n}\nfunction getInternal(contract) {\n  return internalValues.get(contract[internal]);\n}\nfunction isDeferred(value) {\n  return value && typeof value === \"object\" && \"getTopicFilter\" in value && typeof value.getTopicFilter === \"function\" && value.fragment;\n}\nasync function getSubInfo(contract, event) {\n  let topics;\n  let fragment = null;\n  // Convert named events to topicHash and get the fragment for\n  // events which need deconstructing.\n  if (Array.isArray(event)) {\n    const topicHashify = function (name) {\n      if (isHexString(name, 32)) {\n        return name;\n      }\n      const fragment = contract.interface.getEvent(name);\n      assertArgument(fragment, \"unknown fragment\", \"name\", name);\n      return fragment.topicHash;\n    };\n    // Array of Topics and Names; e.g. `[ \"0x1234...89ab\", \"Transfer(address)\" ]`\n    topics = event.map(e => {\n      if (e == null) {\n        return null;\n      }\n      if (Array.isArray(e)) {\n        return e.map(topicHashify);\n      }\n      return topicHashify(e);\n    });\n  } else if (event === \"*\") {\n    topics = [null];\n  } else if (typeof event === \"string\") {\n    if (isHexString(event, 32)) {\n      // Topic Hash\n      topics = [event];\n    } else {\n      // Name or Signature; e.g. `\"Transfer\", `\"Transfer(address)\"`\n      fragment = contract.interface.getEvent(event);\n      assertArgument(fragment, \"unknown fragment\", \"event\", event);\n      topics = [fragment.topicHash];\n    }\n  } else if (isDeferred(event)) {\n    // Deferred Topic Filter; e.g. `contract.filter.Transfer(from)`\n    topics = await event.getTopicFilter();\n  } else if (\"fragment\" in event) {\n    // ContractEvent; e.g. `contract.filter.Transfer`\n    fragment = event.fragment;\n    topics = [fragment.topicHash];\n  } else {\n    assertArgument(false, \"unknown event name\", \"event\", event);\n  }\n  // Normalize topics and sort TopicSets\n  topics = topics.map(t => {\n    if (t == null) {\n      return null;\n    }\n    if (Array.isArray(t)) {\n      const items = Array.from(new Set(t.map(t => t.toLowerCase())).values());\n      if (items.length === 1) {\n        return items[0];\n      }\n      items.sort();\n      return items;\n    }\n    return t.toLowerCase();\n  });\n  const tag = topics.map(t => {\n    if (t == null) {\n      return \"null\";\n    }\n    if (Array.isArray(t)) {\n      return t.join(\"|\");\n    }\n    return t;\n  }).join(\"&\");\n  return {\n    fragment,\n    tag,\n    topics\n  };\n}\nasync function hasSub(contract, event) {\n  const {\n    subs\n  } = getInternal(contract);\n  return subs.get((await getSubInfo(contract, event)).tag) || null;\n}\nasync function getSub(contract, operation, event) {\n  // Make sure our runner can actually subscribe to events\n  const provider = getProvider(contract.runner);\n  assert(provider, \"contract runner does not support subscribing\", \"UNSUPPORTED_OPERATION\", {\n    operation\n  });\n  const {\n    fragment,\n    tag,\n    topics\n  } = await getSubInfo(contract, event);\n  const {\n    addr,\n    subs\n  } = getInternal(contract);\n  let sub = subs.get(tag);\n  if (!sub) {\n    const address = addr ? addr : contract;\n    const filter = {\n      address,\n      topics\n    };\n    const listener = log => {\n      let foundFragment = fragment;\n      if (foundFragment == null) {\n        try {\n          foundFragment = contract.interface.getEvent(log.topics[0]);\n        } catch (error) {}\n      }\n      // If fragment is null, we do not deconstruct the args to emit\n      if (foundFragment) {\n        const _foundFragment = foundFragment;\n        const args = fragment ? contract.interface.decodeEventLog(fragment, log.data, log.topics) : [];\n        emit(contract, event, args, listener => {\n          return new ContractEventPayload(contract, listener, event, _foundFragment, log);\n        });\n      } else {\n        emit(contract, event, [], listener => {\n          return new ContractUnknownEventPayload(contract, listener, event, log);\n        });\n      }\n    };\n    let starting = [];\n    const start = () => {\n      if (starting.length) {\n        return;\n      }\n      starting.push(provider.on(filter, listener));\n    };\n    const stop = async () => {\n      if (starting.length == 0) {\n        return;\n      }\n      let started = starting;\n      starting = [];\n      await Promise.all(started);\n      provider.off(filter, listener);\n    };\n    sub = {\n      tag,\n      listeners: [],\n      start,\n      stop\n    };\n    subs.set(tag, sub);\n  }\n  return sub;\n}\n// We use this to ensure one emit resolves before firing the next to\n// ensure correct ordering (note this cannot throw and just adds the\n// notice to the event queu using setTimeout).\nlet lastEmit = Promise.resolve();\nasync function _emit(contract, event, args, payloadFunc) {\n  await lastEmit;\n  const sub = await hasSub(contract, event);\n  if (!sub) {\n    return false;\n  }\n  const count = sub.listeners.length;\n  sub.listeners = sub.listeners.filter(_ref => {\n    let {\n      listener,\n      once\n    } = _ref;\n    const passArgs = Array.from(args);\n    if (payloadFunc) {\n      passArgs.push(payloadFunc(once ? null : listener));\n    }\n    try {\n      listener.call(contract, ...passArgs);\n    } catch (error) {}\n    return !once;\n  });\n  return count > 0;\n}\nasync function emit(contract, event, args, payloadFunc) {\n  try {\n    await lastEmit;\n  } catch (error) {}\n  const resultPromise = _emit(contract, event, args, payloadFunc);\n  lastEmit = resultPromise;\n  return await resultPromise;\n}\nconst passProperties = [\"then\"];\nexport class BaseContract {\n  target;\n  interface;\n  runner;\n  filters;\n  [internal];\n  fallback;\n  constructor(target, abi, runner, _deployTx) {\n    if (runner == null) {\n      runner = null;\n    }\n    const iface = Interface.from(abi);\n    defineProperties(this, {\n      target,\n      runner,\n      interface: iface\n    });\n    Object.defineProperty(this, internal, {\n      value: {}\n    });\n    let addrPromise;\n    let addr = null;\n    let deployTx = null;\n    if (_deployTx) {\n      const provider = getProvider(runner);\n      // @TODO: the provider can be null; make a custom dummy provider that will throw a\n      // meaningful error\n      deployTx = new ContractTransactionResponse(this.interface, provider, _deployTx);\n    }\n    let subs = new Map();\n    // Resolve the target as the address\n    if (typeof target === \"string\") {\n      if (isHexString(target)) {\n        addr = target;\n        addrPromise = Promise.resolve(target);\n      } else {\n        const resolver = getRunner(runner, \"resolveName\");\n        if (!canResolve(resolver)) {\n          throw makeError(\"contract runner does not support name resolution\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"resolveName\"\n          });\n        }\n        addrPromise = resolver.resolveName(target).then(addr => {\n          if (addr == null) {\n            throw new Error(\"TODO\");\n          }\n          getInternal(this).addr = addr;\n          return addr;\n        });\n      }\n    } else {\n      addrPromise = target.getAddress().then(addr => {\n        if (addr == null) {\n          throw new Error(\"TODO\");\n        }\n        getInternal(this).addr = addr;\n        return addr;\n      });\n    }\n    // Set our private values\n    setInternal(this, {\n      addrPromise,\n      addr,\n      deployTx,\n      subs\n    });\n    // Add the event filters\n    const filters = new Proxy({}, {\n      get: (target, _prop, receiver) => {\n        // Pass important checks (like `then` for Promise) through\n        if (passProperties.indexOf(_prop) >= 0) {\n          return Reflect.get(target, _prop, receiver);\n        }\n        const prop = String(_prop);\n        const result = this.getEvent(prop);\n        if (result) {\n          return result;\n        }\n        throw new Error(`unknown contract event: ${prop}`);\n      }\n    });\n    defineProperties(this, {\n      filters\n    });\n    defineProperties(this, {\n      fallback: iface.receive || iface.fallback ? new WrappedFallback(this) : null\n    });\n    // Return a Proxy that will respond to functions\n    return new Proxy(this, {\n      get: (target, _prop, receiver) => {\n        if (_prop in target || passProperties.indexOf(_prop) >= 0) {\n          return Reflect.get(target, _prop, receiver);\n        }\n        const prop = String(_prop);\n        const result = target.getFunction(prop);\n        if (result) {\n          return result;\n        }\n        throw new Error(`unknown contract method: ${prop}`);\n      }\n    });\n  }\n  connect(runner) {\n    return new BaseContract(this.target, this.interface, runner);\n  }\n  async getAddress() {\n    return await getInternal(this).addrPromise;\n  }\n  async getDeployedCode() {\n    const provider = getProvider(this.runner);\n    assert(provider, \"runner does not support .provider\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"getDeployedCode\"\n    });\n    const code = await provider.getCode(await this.getAddress());\n    if (code === \"0x\") {\n      return null;\n    }\n    return code;\n  }\n  async waitForDeployment() {\n    // We have the deployement transaction; just use that (throws if deployement fails)\n    const deployTx = this.deploymentTransaction();\n    if (deployTx) {\n      await deployTx.wait();\n      return this;\n    }\n    // Check for code\n    const code = await this.getDeployedCode();\n    if (code != null) {\n      return this;\n    }\n    // Make sure we can subscribe to a provider event\n    const provider = getProvider(this.runner);\n    assert(provider != null, \"contract runner does not support .provider\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"waitForDeployment\"\n    });\n    return new Promise((resolve, reject) => {\n      const checkCode = async () => {\n        try {\n          const code = await this.getDeployedCode();\n          if (code != null) {\n            return resolve(this);\n          }\n          provider.once(\"block\", checkCode);\n        } catch (error) {\n          reject(error);\n        }\n      };\n      checkCode();\n    });\n  }\n  deploymentTransaction() {\n    return getInternal(this).deployTx;\n  }\n  getFunction(key) {\n    if (typeof key !== \"string\") {\n      key = key.format();\n    }\n    return new WrappedMethod(this, key);\n  }\n  getEvent(key) {\n    if (typeof key !== \"string\") {\n      key = key.format();\n    }\n    return new WrappedEvent(this, key);\n  }\n  async queryTransaction(hash) {\n    // Is this useful?\n    throw new Error(\"@TODO\");\n  }\n  async queryFilter(event, fromBlock, toBlock) {\n    if (fromBlock == null) {\n      fromBlock = 0;\n    }\n    if (toBlock == null) {\n      toBlock = \"latest\";\n    }\n    const {\n      addr,\n      addrPromise\n    } = getInternal(this);\n    const address = addr ? addr : await addrPromise;\n    const {\n      fragment,\n      topics\n    } = await getSubInfo(this, event);\n    const filter = {\n      address,\n      topics,\n      fromBlock,\n      toBlock\n    };\n    const provider = getProvider(this.runner);\n    assert(provider, \"contract runner does not have a provider\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"queryFilter\"\n    });\n    return (await provider.getLogs(filter)).map(log => {\n      let foundFragment = fragment;\n      if (foundFragment == null) {\n        try {\n          foundFragment = this.interface.getEvent(log.topics[0]);\n        } catch (error) {}\n      }\n      if (foundFragment) {\n        return new EventLog(log, this.interface, foundFragment);\n      } else {\n        return new Log(log, provider);\n      }\n    });\n  }\n  async on(event, listener) {\n    const sub = await getSub(this, \"on\", event);\n    sub.listeners.push({\n      listener,\n      once: false\n    });\n    sub.start();\n    return this;\n  }\n  async once(event, listener) {\n    const sub = await getSub(this, \"once\", event);\n    sub.listeners.push({\n      listener,\n      once: true\n    });\n    sub.start();\n    return this;\n  }\n  async emit(event) {\n    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n    return await emit(this, event, args, null);\n  }\n  async listenerCount(event) {\n    if (event) {\n      const sub = await hasSub(this, event);\n      if (!sub) {\n        return 0;\n      }\n      return sub.listeners.length;\n    }\n    const {\n      subs\n    } = getInternal(this);\n    let total = 0;\n    for (const {\n      listeners\n    } of subs.values()) {\n      total += listeners.length;\n    }\n    return total;\n  }\n  async listeners(event) {\n    if (event) {\n      const sub = await hasSub(this, event);\n      if (!sub) {\n        return [];\n      }\n      return sub.listeners.map(_ref2 => {\n        let {\n          listener\n        } = _ref2;\n        return listener;\n      });\n    }\n    const {\n      subs\n    } = getInternal(this);\n    let result = [];\n    for (const {\n      listeners\n    } of subs.values()) {\n      result = result.concat(listeners.map(_ref3 => {\n        let {\n          listener\n        } = _ref3;\n        return listener;\n      }));\n    }\n    return result;\n  }\n  async off(event, listener) {\n    const sub = await hasSub(this, event);\n    if (!sub) {\n      return this;\n    }\n    if (listener) {\n      const index = sub.listeners.map(_ref4 => {\n        let {\n          listener\n        } = _ref4;\n        return listener;\n      }).indexOf(listener);\n      if (index >= 0) {\n        sub.listeners.splice(index, 1);\n      }\n    }\n    if (listener == null || sub.listeners.length === 0) {\n      sub.stop();\n      getInternal(this).subs.delete(sub.tag);\n    }\n    return this;\n  }\n  async removeAllListeners(event) {\n    if (event) {\n      const sub = await hasSub(this, event);\n      if (!sub) {\n        return this;\n      }\n      sub.stop();\n      getInternal(this).subs.delete(sub.tag);\n    } else {\n      const {\n        subs\n      } = getInternal(this);\n      for (const {\n        tag,\n        stop\n      } of subs.values()) {\n        stop();\n        subs.delete(tag);\n      }\n    }\n    return this;\n  }\n  // Alias for \"on\"\n  async addListener(event, listener) {\n    return await this.on(event, listener);\n  }\n  // Alias for \"off\"\n  async removeListener(event, listener) {\n    return await this.off(event, listener);\n  }\n  static buildClass(abi) {\n    class CustomContract extends BaseContract {\n      constructor(address) {\n        let runner = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        super(address, abi, runner);\n      }\n    }\n    return CustomContract;\n  }\n  static from(target, abi, runner) {\n    if (runner == null) {\n      runner = null;\n    }\n    const contract = new this(target, abi, runner);\n    return contract;\n  }\n}\nfunction _ContractBase() {\n  return BaseContract;\n}\nexport class Contract extends _ContractBase() {}","map":{"version":3,"names":["Interface","Typed","resolveAddress","copyRequest","Log","defineProperties","isCallException","isHexString","resolveProperties","makeError","assert","assertArgument","ContractEventPayload","ContractUnknownEventPayload","ContractTransactionResponse","EventLog","BN_0","BigInt","canCall","value","call","canEstimate","estimateGas","canResolve","resolveName","canSend","sendTransaction","PreparedTopicFilter","filter","fragment","constructor","contract","args","inputs","length","Error","runner","getRunner","resolver","resolvedArgs","Promise","all","map","param","index","arg","walkAsync","type","interface","encodeFilterTopics","getTopicFilter","_WrappedMethodBase","Function","feature","provider","getProvider","copyOverrides","allowed","overrides","dereference","to","indexOf","data","from","resolveArgs","_runner","WrappedFallback","_contract","proxy","Proxy","apply","target","thisArg","send","populateTransaction","tx","getAddress","iface","payable","receive","fallback","staticCall","operation","error","WrappedMethod","name","_key","key","getFunctionName","getFragment","constant","getFunction","_len","arguments","Array","_len2","_key2","pop","Object","assign","encodeFunctionData","result","staticCallResult","decodeFunctionResult","_WrappedEventBase","WrappedEvent","getEventName","getEvent","_len3","_key3","internal","Symbol","for","internalValues","WeakMap","setInternal","values","set","getInternal","get","isDeferred","getSubInfo","event","topics","isArray","topicHashify","topicHash","e","t","items","Set","toLowerCase","sort","tag","join","hasSub","subs","getSub","addr","sub","address","listener","log","foundFragment","_foundFragment","decodeEventLog","emit","starting","start","push","on","stop","started","off","listeners","lastEmit","resolve","_emit","payloadFunc","count","_ref","once","passArgs","resultPromise","passProperties","BaseContract","filters","abi","_deployTx","defineProperty","addrPromise","deployTx","Map","then","_prop","receiver","Reflect","prop","String","connect","getDeployedCode","code","getCode","waitForDeployment","deploymentTransaction","wait","reject","checkCode","format","queryTransaction","hash","queryFilter","fromBlock","toBlock","getLogs","_len4","_key4","listenerCount","total","_ref2","concat","_ref3","_ref4","splice","delete","removeAllListeners","addListener","removeListener","buildClass","CustomContract","undefined","_ContractBase","Contract"],"sources":["../../src.ts/contract/contract.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}